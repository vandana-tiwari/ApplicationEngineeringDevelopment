/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ChiefAdminOfficerRole;

import Business.Employee.Employee;
import userinterface.HealthOfficerRole.*;
import Business.Employee.EmployeeDirectory;
import Business.Employee.Resident;
import Business.Enterprise.Enterprise;
import Business.Organization.ChiefAdminOfficerOrganization;
import Business.Organization.EPAOrganization;
import Business.Organization.HealthOfficerOrganization;
import Business.Organization.Organization;
import Business.Organization.ReceptionistOrganization;
import Business.Organization.ResidentOrganization;
import Business.Sensor.AirSensor;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ChiefAdminOfficerEPASpecialistWorkRequest;
import Business.WorkQueue.HealthOfficerHospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vanda
 */
public class ChiefAdminOfficerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HealthOfficerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    //private EmployeeDirectory employeeDirectory;
    private UserAccount account;
    private ChiefAdminOfficerOrganization organization;
    private Organization org;
    private Enterprise enterprise;
    
    public ChiefAdminOfficerWorkAreaJPanel(JPanel  userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = (ChiefAdminOfficerOrganization)organization;
        this.org = organization;
        this.account = account;
        this.enterprise = enterprise;
        populateTable();
        populateRequestTable();
        valueLabel1.setText(enterprise.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        sensorReadingJTable = new javax.swing.JTable();
        sensorRequestHospitalJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        valueLabel2 = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        valueLabel1 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);

        sensorReadingJTable.setFont(new java.awt.Font("Californian FB", 0, 11)); // NOI18N
        sensorReadingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Name"
            }
        ));
        jScrollPane4.setViewportView(sensorReadingJTable);

        sensorRequestHospitalJButton.setBackground(java.awt.Color.white);
        sensorRequestHospitalJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        sensorRequestHospitalJButton.setText("Send request to EPA");
        sensorRequestHospitalJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sensorRequestHospitalJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorRequestHospitalJButtonActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient", "Date", "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        valueLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        valueLabel2.setText("Patients with Abnormal Air Quality Issue:");

        refreshTestJButton.setBackground(java.awt.Color.white);
        refreshTestJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        valueLabel1.setText("<value>");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Chief Admin Officer Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(valueLabel2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sensorRequestHospitalJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valueLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)))
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(enterpriseLabel1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(enterpriseLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valueLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refreshTestJButton)))
                .addGap(35, 35, 35)
                .addComponent(valueLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(sensorRequestHospitalJButton)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sensorRequestHospitalJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorRequestHospitalJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = sensorReadingJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a date", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChiefAdminOfficerEPASpecialistWorkRequest request = new ChiefAdminOfficerEPASpecialistWorkRequest();
        //int selectedRow =  sensorReadingJTable.getSelectedRow();
        AirSensor as = (AirSensor)sensorReadingJTable.getValueAt(selectedRow, 0);
        Resident resident = (Resident)sensorReadingJTable.getValueAt(selectedRow, 1);
        request.setPatientName(resident);
        request.setDate(as);
        System.out.println("Date::::::::::::::::::::::::::"+request.getDate());
        request.setMessage("Patients with abnormal Air Quality");
        request.setSender(account);
        request.setStatus("Sent");
        request.setReceiver(account);
        as.setAsCaoProccessed("Processed");

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof EPAOrganization){
                System.out.println("Inside organization");
                org = organization;
                System.out.println("Ogranization::::::"+ org);
                break;
            }
        }
        if (org!=null){
            System.out.println("Inside nt null org");
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            //org.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("................");
        }

        refresh();
    }//GEN-LAST:event_sensorRequestHospitalJButtonActionPerformed

     public void refresh(){
        populateRequestTable();
        populateTable();
    }
     
     private void populateTable(){
        
       DefaultTableModel dtm = (DefaultTableModel) sensorReadingJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
        
    for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
        if(o instanceof ResidentOrganization){
        for(Employee e : o.getEmployeeDirectory().getEmployeeList()){
            System.out.println(e.getName());
            
            if(e instanceof Resident)
            {
                Resident r = (Resident)e;
                System.out.println("res"+r);
                for(AirSensor a : r.getAirSensorReading().getAirSensorReading()){
                    if(a.getAsCaoProccessed().equals("Unprocessed")){
                    System.out.println(a.getAirQualityStatus());
                    if(!((a.getAirQualityStatus().equals("Good")) || (a.getAirQualityStatus().equals("Moderate")))){
                        System.out.println("#####for air sensor reading######");
                        Object row[] = new Object [2];
                        row[0]= a;
                        row[1]= r;
                        dtm.addRow(row); 
                    }
            }
                }
  
            }
            
        }
        }
    }
    }        
            
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        if(account.getWorkQueue().getWorkRequestList().isEmpty())
        {
            return;
        }
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            String result;
            System.out.println("reema bohot yedi bilkul nahi hain");
            Object[] row = new Object[6];
            ChiefAdminOfficerEPASpecialistWorkRequest cwr = (ChiefAdminOfficerEPASpecialistWorkRequest)request;
            row[0] = cwr.getPatientName();
            row[1] = cwr.getDate();
            result = cwr.getTestResult();
            row[2] = request;
            row[3] = request.getReceiver();
            row[4] = request.getStatus();
            row[5] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }
    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        refresh();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable sensorReadingJTable;
    private javax.swing.JButton sensorRequestHospitalJButton;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JLabel valueLabel2;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
