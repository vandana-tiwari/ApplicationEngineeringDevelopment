/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ReceptionistRole;

import Business.Appointment.Appointment;
import Business.Email.SendEmail;
import Business.Employee.Resident;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.ReceptionistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReceptionistDoctorWorkRequest;
import java.awt.CardLayout;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vanda
 */
public class ScheduleAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SceduleAppointmentJPanel
     */
    private JPanel userProcessContainer;
    private ReceptionistOrganization org;
    private UserAccount account;
    private Resident resident;
    private Enterprise enterprise;
    private String date;
    private String time;
    public ScheduleAppointmentJPanel(JPanel userProcessContainer, ReceptionistOrganization org, Resident resident, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.org = org;
        this.resident = resident;
        this.account = account;
        this.enterprise = enterprise;
        populateRequestTable();
        populateFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox();
        dayCombo = new javax.swing.JComboBox();
        timeCombo = new javax.swing.JComboBox();
        amPmCombo = new javax.swing.JComboBox();
        minCombo = new javax.swing.JComboBox();
        yearTxt = new javax.swing.JTextField();
        patientTxt = new javax.swing.JTextField();

        setBackground(null);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Time", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
            organizationJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Appointment Calendar");

        requestTestJButton.setBackground(null);
        requestTestJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        requestTestJButton.setText("Schedule appointment");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(null);
        backJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Name of the Patient:");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Date:");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("Time:");

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dayCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        timeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        amPmCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        minCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        yearTxt.setEditable(false);
        yearTxt.setEnabled(false);
        yearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTxtActionPerformed(evt);
            }
        });

        patientTxt.setEditable(false);
        patientTxt.setEnabled(false);
        patientTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(262, 262, 262)
                                .addComponent(requestTestJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(38, 38, 38)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(timeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(minCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(amPmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(patientTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(133, 133, 133))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(patientTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(timeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amPmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestTestJButton)
                    .addComponent(backJButton))
                .addGap(51, 51, 51))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateFields(){
        dayCombo.removeAllItems();
        monthCombo.removeAllItems();
        timeCombo.removeAllItems();
        amPmCombo.removeAllItems();
        minCombo.removeAllItems();
        for(int i=1; i<32;i++){
            dayCombo.addItem(Integer.toString(i));
        }
        
        monthCombo.addItem("January");
        monthCombo.addItem("February");
        monthCombo.addItem("March");
        monthCombo.addItem("April");
        monthCombo.addItem("May");
        monthCombo.addItem("June ");
        monthCombo.addItem("July");
        monthCombo.addItem("August");
        monthCombo.addItem("September");
        monthCombo.addItem("October ");
        monthCombo.addItem("November");
        monthCombo.addItem("December");
        
        for(int i=1; i<13;i++){
            timeCombo.addItem(Integer.toString(i));
        }
        amPmCombo.addItem("AM");
        amPmCombo.addItem("PM");
        minCombo.addItem("00");
        minCombo.addItem("15");
        minCombo.addItem("30");
        minCombo.addItem("45");
        
        yearTxt.setText("2015");
        patientTxt.setText(resident.getName());
    }
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();        
        model.setRowCount(0);
        System.out.println("***********************************************");
        for (Appointment a : enterprise.getAppointmentDirectory().getAppointmentDirectory()){
            System.out.println("populating table");
            Object[] row = new Object[3];
            row[0] = a.getDate();
            row[1] = a.getTime();
            row[2] = a.getPatientName();
            model.addRow(row);
        }
//        }
//            
//            Object[] row = new Object[3];
//            row[0] = date;
//            row[1] = time;
//            row[2] = resident;            
//            model.addRow(row);
//            System.out.println("Rowwwwwwwwwwwwwww:"+row);
    }
    
    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        System.out.println("Rresidenttttttttt:"+resident.getEmail());
        String time = (String)timeCombo.getSelectedItem();
        String min = (String)minCombo.getSelectedItem();
        String amPm= (String)amPmCombo.getSelectedItem();
        String times = (time+":"+min+" "+amPm);
        System.out.println("times"+times);
        time = (String)(((String)timeCombo.getSelectedItem())+":"+((String)minCombo.getSelectedItem())+" "+((String)amPmCombo.getSelectedItem()));
        System.out.println("DATEeeeeeeeeee:"+date);
        date = (String)(((String)dayCombo.getSelectedItem())+" "+((String)monthCombo.getSelectedItem())+","+yearTxt.getText());
        System.out.println("Timeeeeee:"+time);
        for(Appointment a: enterprise.getAppointmentDirectory().getAppointmentDirectory()){
            if(a.getDate().equals(date) && a.getTime().equals(time)){
                JOptionPane.showMessageDialog(null, "Appointment Conflict! Please create another appointment schedule", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
        }

        
        String recipient=resident.getEmail();
//        String date = dateTxt.getText();
//        String time = timeTxt.getText();
        createDoctorWorkRequest(date, time);
        String body= "Appointment scheduled on "+date+" at "+time;
        System.out.println("------------body---------------"+body);
        enterprise.getAppointmentDirectory().addAppointment(date, time, resident.getName());
        System.out.println("Appointment set");
//        for(Appointment a : enterprise.getAppointmentDirectory().getAppointmentDirectory()){
//            System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Ap"+a.getDate()+a.getPatientName()+a.getTime());
//        }
        populateRequestTable();
        try {
            sendEmail(recipient,body);
            System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        } catch (MessagingException ex) {
            Logger.getLogger(ScheduleAppointmentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ScheduleAppointmentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_requestTestJButtonActionPerformed

    public void createDoctorWorkRequest(String date, String time){
        ReceptionistDoctorWorkRequest request = new ReceptionistDoctorWorkRequest();

        request.setDate(date);
        request.setTime(time);
        request.setPatientName(resident);
        request.setMessage("Appointment for "+resident.getName());
        request.setStatus("Scheduled");
        request.setTestResult("Scheduled");
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof DoctorOrganization){
                System.out.println("Inside organization");
                org = organization;
                System.out.println("Ogranization::::::"+ org);
                break;
            }
        }
        if (org!=null){
            System.out.println("Inside nt null org");
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            //org.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("................");
        }
       
        
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    public void sendEmail(String recipient, String body) throws MessagingException, UnsupportedEncodingException{
         SendEmail email = new SendEmail();
         email.sendEmail(recipient, body);
        
    }
    private void yearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTxtActionPerformed

    private void patientTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox amPmCombo;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox dayCombo;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox minCombo;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField patientTxt;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JComboBox timeCombo;
    private javax.swing.JTextField yearTxt;
    // End of variables declaration//GEN-END:variables
}
