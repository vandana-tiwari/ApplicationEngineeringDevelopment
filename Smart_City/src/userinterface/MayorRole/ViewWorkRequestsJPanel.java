/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MayorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.MayorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EPASpecialistMayorWorkRequest;
import Business.WorkQueue.HealthOfficerMayorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ViewWorkRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    //EcoSystem system;
    private MayorOrganization organization;
    private Enterprise enterprise;
    private UserAccount account;
    
    
    public ViewWorkRequestsJPanel(JPanel panel, UserAccount ua, MayorOrganization mOrg, Enterprise etr) {
        initComponents(); 
        this.userProcessContainer = panel;
        //this.system = system;
        this.organization = mOrg;
        this.enterprise = etr;
        this.account = ua;
        populateTable();
    }
    
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        System.out.println("organization:"+organization);
        System.out.println("organization Work Q:"+organization.getWorkQueue());
        System.out.println("organization Work Req List:"+organization.getWorkQueue().getWorkRequestList());
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            if(request instanceof HealthOfficerMayorWorkRequest){
            HealthOfficerMayorWorkRequest req = (HealthOfficerMayorWorkRequest)request;
            //System.out.println("Account Work Q:"+account.getWorkQueue());
            Object[] row = new Object[6];
            row[0] = req.getPatientName();
            row[1] = req.getDate();
            row[2] = req;
            row[3] = req.getSender().getEmployee().getName();
            row[4] = req.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[5] = req.getStatus();
            //System.out.println("Account Work Req List:"+account.getWorkQueue().getWorkRequestList());
            
            model.addRow(row);
        
            }else{
                System.out.println("Entered here%%%%%%%%");
                EPASpecialistMayorWorkRequest req = (EPASpecialistMayorWorkRequest)request;
                Object[] row = new Object[6];
            row[0] = req.getPatientName();
            row[1] = req.getAsDate();
            row[2] = req;
            row[3] = req.getSender().getEmployee().getName();
            row[4] = req.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[5] = req.getStatus();
            model.addRow(row);
            }
           
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Date", "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 610, 90));

        assignJButton.setBackground(java.awt.Color.white);
        assignJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        processJButton.setBackground(java.awt.Color.white);
        processJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, -1, -1));

        refreshJButton.setBackground(java.awt.Color.white);
        refreshJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Mayor Work Requests");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String status = (String)workRequestJTable.getValueAt(selectedRow,5);
        if(status.equals("Completed")){
            JOptionPane.showMessageDialog(null, "This request is already completed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(status.equals("Processing")){
            JOptionPane.showMessageDialog(null, "The request is already assigned. Please process to continue to complete the request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 2);
        
        request.setReceiver(account);
        request.setStatus("Pending");
        populateTable();
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String status = (String)workRequestJTable.getValueAt(selectedRow,5);
        if(status.equals("Completed")){
            JOptionPane.showMessageDialog(null, "This request is already completed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!((status.equals("Pending"))||(status.equals("Processing")))){
            JOptionPane.showMessageDialog(null, "Please assign the request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Object object = (Object) workRequestJTable.getValueAt(selectedRow, 2);
        
        if( object instanceof HealthOfficerMayorWorkRequest){
            HealthOfficerMayorWorkRequest homwr = (HealthOfficerMayorWorkRequest) object;
            ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, homwr, enterprise);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            EPASpecialistMayorWorkRequest epawr = (EPASpecialistMayorWorkRequest) object;
            ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer,epawr,enterprise );
            userProcessContainer.add("processWorkRequestJPanel1", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
        
        HealthOfficerMayorWorkRequest request = (HealthOfficerMayorWorkRequest)workRequestJTable.getValueAt(selectedRow, 2);
     
        request.setStatus("Processing");

        
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
