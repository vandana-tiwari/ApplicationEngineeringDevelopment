/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HealthOfficerRole;

import Business.Employee.EmployeeDirectory;
import Business.Enterprise.Enterprise;
import Business.Organization.AdminOrganization;
import Business.Organization.HealthOfficerOrganization;
import Business.Organization.MayorOrganization;
import Business.Organization.Organization;
import Business.Organization.ResidentOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;

/**
 *
 * @author vanda
 */
public class HealthOfficerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HealthOfficerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    //private EmployeeDirectory employeeDirectory;
    private UserAccount account;
    private HealthOfficerOrganization organization;
    private Organization org;
    private Enterprise enterprise;
    
    public HealthOfficerWorkAreaJPanel(JPanel  userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = (HealthOfficerOrganization)organization;
        this.org = organization;
        this.account = account;
        this.enterprise = enterprise;
        //this.employeeDirectory = employeeDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(java.awt.Color.white);

        jButton1.setBackground(java.awt.Color.white);
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setText("Manage Patients");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(java.awt.Color.white);
        jButton2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton2.setText("Manage Requests");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(257, 257, 257))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jButton1)
                .addGap(62, 62, 62)
                .addComponent(jButton2)
                .addGap(169, 169, 169))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        EmployeeDirectory ed = new EmployeeDirectory();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof  ResidentOrganization){
                ed = org.getEmployeeDirectory();
                break;
            }
        }
         ManagePatientJPanel managePatientJPanel = new ManagePatientJPanel(userProcessContainer,ed);
            userProcessContainer.add("managePatientJPanel",managePatientJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
            System.out.println("********");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //EmployeeDirectory ed = enterprise.getEmployeeDirectory();
         RequestToMayorJPanel requestToMayorJPanel = new RequestToMayorJPanel(userProcessContainer,account,org,enterprise);
            userProcessContainer.add("requestToMayorJPanel",requestToMayorJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            System.out.println("********");
//        EmployeeDirectory edR = new EmployeeDirectory();
//        //AdminOrganization = new AdminOrganization();
//        MayorOrganization mayorOrganization = new MayorOrganization();
//        ResidentOrganization residentOrganization = new ResidentOrganization();
//        System.out.println("enterprise.getOrganizationDirectory().getOrganizationList("+enterprise.getOrganizationDirectory().getOrganizationList());
//        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
//            System.out.println("Org"+org);
//            if(org instanceof  ResidentOrganization){
//                System.out.println("It is instance of ResOrg");
//                residentOrganization = (ResidentOrganization) org;
//                edR = org.getEmployeeDirectory();
//                System.out.println("___________");
//                break;
//            }
//        }
//        EmployeeDirectory edM = new EmployeeDirectory();
//        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
//            if(org instanceof  MayorOrganization){
//                System.out.println("It is instance of MayOrg");
//                mayorOrganization = (MayorOrganization) org;
//                edM = org.getEmployeeDirectory();
//                System.out.println("mmmmmmmmmmm");
//                break;
//            }
//        }
//        
//        
        
//         RequestToMayorJPanel requestToMayorJPanel = new RequestToMayorJPanel(userProcessContainer,account,edR,edM,enterprise);
//            userProcessContainer.add("requestToMayorJPanel",requestToMayorJPanel);
//            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
//            System.out.println("********");
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
